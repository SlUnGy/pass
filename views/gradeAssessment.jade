extends layout
block content
	script.
	
		function assessmentEssentials(){
			this.name = "";
			this.assignments = new Array(); //The assignments go here
		}

		function assignmentEssentials(){
			this.description = "";
			this.tolerance = 0.0;
			this.questions = new Array(); //The Questions go here
		}

		function questionEssentials(){
			this.smileys = new Array(); //The values of the smileys go here
		}

		postData = new assessmentEssentials(); //Already create the field that we will post later

		function recalculateColors(parentNode){
				var textfields = parentNode.getElementsByClassName("textfield");
				var color_jumps = 351/(textfields.length);
				var red = 99;
				var green = 255;
				var blue = 0;
				
				//Modus: Fill up red first (yellow), than reduce green to 0
				for(var i=0; i<textfields.length; i++){
					textfields[i].style.backgroundColor = "#" + Math.round(red).toString(16) + Math.round(green).toString(16) + "00";
					if(red+color_jumps > 255){
						green = green - (color_jumps-(255-red));
						red = 255;
					}
					else{
						red = red+color_jumps;
					}
				}
			}
			
		function fillAssessmentFromJSON(input){
			var assessment = JSON.parse(input);
			var assignments = JSON.parse(assessment.assessment);
						
			var assessmentDiv = document.getElementById("assessmentDiv");
			
			var assessmentHeading = document.createElement("p");
			assessmentHeading.innerHTML = "Assessment " + assessment.name + " of student " + "#{studentName}";
			assessmentHeading.style.fontSize = "24px";
			assessmentDiv.appendChild(assessmentHeading);
			assessmentDiv.appendChild(document.createElement("br"));

			postData.name = assessment.name; //Already fill the posted assessment name
												
			for(var i = 0; i<assignments.length; i++){ //Iterate over the assignments
				var currentAssignment = assignments[i];
				
				var newAssignment = function(){}; //Create a placeholder object
				var assignmentHolder = document.createElement("div");
	
				placeholder = document.createElement("label");
				placeholder.style.minWidth = "20px";
				placeholder.style.display = "inline-block";
				
				newAssignment.description = document.createElement("p");
				newAssignment.description.innerHTML = currentAssignment.description;
				newAssignment.description.style.minWidth = "50px";
				newAssignment.description.style.fontSize = "19px";

				assignmentHolder.appendChild(placeholder);			
				assignmentHolder.appendChild(newAssignment.description);

				if(currentAssignment.tolerance == ""){
					currentAssignment.tolerance = "0,00";
				}
				newAssignment.tolerance = document.createElement("p");
				newAssignment.tolerance.innerHTML = "Tolerance: " + currentAssignment.tolerance;
				assignmentHolder.appendChild(newAssignment.tolerance);

				var postAssignment = new assignmentEssentials();
				postAssignment.description = currentAssignment.description; //Prefill the name
				postAssignment.tolerance = parseFloat(currentAssignment.tolerance);
				postData.assignments.push(postAssignment); //Push the prefilled assignment
								
				assignmentHolder.appendChild(document.createElement("br"));
				
				newAssignment.questionHolder = document.createElement("div");
				newAssignment.questionHolder.id = "questionHolder";
				newAssignment.questionHolder.className = "questionHolder";

				for(var j = 0; j<currentAssignment.questions.length; j++){
					currentQuestion = currentAssignment.questions[j];
					questionDiv = document.createElement("div");
		
					newQuestion = function(){}
					newQuestion.description = document.createElement("p");
					newQuestion.description.innerHTML = currentQuestion.description;
					newQuestion.description.style.minWidth = "150px";
					newQuestion.description.style.fontSize = "16px";
					newQuestion.description.style.display = "inline-block";

					questionDiv.appendChild(newQuestion.description);

					newQuestion.points = document.createElement("input");
					newQuestion.points.value = currentQuestion.points;
					newQuestion.points.style.width = "50px";
					newQuestion.points.style.fontSize = "16px";
					newQuestion.points.style.display = "inline-block";
					newQuestion.points.className = "textfield";
					newQuestion.points.readOnly = "readonly";

					questionDiv.appendChild(newQuestion.points);
										
					newQuestion.smileyHolder = document.createElement("span");
					newQuestion.smileyHolder.className = "smileyHolder";

					for(var z = 0; z<currentQuestion.smileys; z++){
						var newSmiley = document.createElement("input"); 
						newSmiley.className = "textfield";
						newSmiley.style.width = "16px";
						newSmiley.maxLength = "2";
						newQuestion.smileyHolder.appendChild(newSmiley);
					}
					recalculateColors(newQuestion.smileyHolder);
					questionDiv.appendChild(newQuestion.smileyHolder);
										
					newAssignment.questionHolder.appendChild(questionDiv);

				}
				
				assignmentHolder.appendChild(newAssignment.questionHolder);

				assessmentDiv.appendChild(assignmentHolder);
			}
		}
		function postValues(){
			//Complete the prefilled assessment
			//We have to collect the questions that were completed by the user
			var assessmentDiv = document.getElementById("assessmentDiv");
			for(var i = 2; i<assessmentDiv.childNodes.length; i++){
				var assignmentDiv = assessmentDiv.childNodes[i];
				var assignmentDivChildren = assignmentDiv.childNodes;
				for(var j = 4; j<assignmentDivChildren.length; j++){
					var questionHolder = assignmentDivChildren[j];
					for(var k = 0; k<questionHolder.childNodes.length; k++){ //Iterate over the questions
						var question = questionHolder.childNodes[k]
						var smileyHolder = question.childNodes[2];
						var smileyValueArray = new Array();
						for(var l=0; l<smileyHolder.childNodes.length; l++){
							smileyValueArray.push(parseInt(smileyHolder.childNodes[l].value));
						}
						var postQuestion  = new questionEssentials();
						postQuestion.smileys = smileyValueArray;
						postData.assignments[i-2].questions.push(postQuestion); //Add the smileys to the assignment
					}
				}
			}
			document.getElementById("postGrading").value = JSON.stringify(postData);
			document.getElementById("studentName").value = "#{studentName}";
			document.getElementById("assessmentName").value = "#{assessmentName}";
			//event.target.parentNode.submit();
		}

		var xmlhttp = new XMLHttpRequest();
		xmlhttp.onreadystatechange=function(){
			if(xmlhttp.readyState==4 && xmlhttp.status==200){
				fillAssessmentFromJSON(xmlhttp.responseText)
			}
		}
		//Request the assessment from the DB
		xmlhttp.open("GET","getAssessment?a=" + "#{assessmentName}" ,true);
		xmlhttp.send();
		
	form(action="/gradeAssessmentDo", method="post" id="createForm")
		#assessmentDiv
		input(type="hidden", name="postGrading", id="postGrading", value="")
		input(type="hidden", name="studentName", id="studentName", value="")
		input(type="hidden", name="assessmentName", id="assessmentName", value="")
		input(type="submit", value="Finish Grading", class="button", onclick="postValues()")
